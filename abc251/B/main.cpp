#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define all(x) (x).begin(),(x).end()
#define dump(x)  cout << #x << " = " << (x) << endl;
typedef long long ll;

void solve(long long N, long long W, std::vector<long long> A){
    vector<bool> map(W+1, false);

    rep(i, N) {
        ll val = A.at(i);
        if (val <= W)
            map[val]= true;
    }

    rep(i, N) {
        rep(j, N) {
            ll val = A.at(i)+A.at(j);
            if (val <= W && i!=j)
                map[val] = true;
        }
    }

    rep(i, N) {
        rep(j, N) {
            rep(k, N) {
                ll val = A.at(i)+A.at(j)+A.at(k);
                if (val <= W && i!=j && i!=k && j!=k)
                    map[val] = true;
            }
        }
    }

    cout << std::count(map.begin(), map.end(), true) << endl;
}

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    long long W;
    std::scanf("%lld", &W);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, W, std::move(A));
    return 0;
}
