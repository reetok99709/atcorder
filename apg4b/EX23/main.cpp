#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

#define rep(i, n) for (int i = 0; i < (int)(n); i++)


void solve(long long N, std::vector<long long> A){
    sort(A.begin(), A.end());

    map<long long, long long> map;
    rep(i, N) {
        long long val = A.at(i);
        if (map.count(val)==0)
            map[val] = 0;
        map[val]+=1;
    }

    auto ans = max_element(begin(map), end(map),
                           [](const decltype(map)::value_type & p1, const decltype(map)::value_type & p2) {
                               return p1.second < p2.second;
                           });

    cout << ans->first << " " << ans->second << endl;

}

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
