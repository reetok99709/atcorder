#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)

void solve(long long N, std::vector<long long> a, std::vector<long long> b){
    vector<pair<long long, long long> > vec;
    rep (i, N) {
        vec.push_back(
                make_pair(a.at(i), b.at(i))
                );
    }
    sort(vec.begin(), vec.end(),
         [] (const auto &x, const auto &y) {return x.second < y.second;});

    rep (i, N) {
        long long v1,v2;
        tie(v1,v2) = vec.at(i);
        cout << v1 << " " << v2 << endl;
    }
}

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> a(N);
    std::vector<long long> b(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &a[i]);
        std::scanf("%lld", &b[i]);
    }
    solve(N, std::move(a), std::move(b));
    return 0;
}
