#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, std::vector<long long> A){
    int ans = N * (N - 1) / 2;
    sort(A.begin(), A.end());
    map<long, long> map;
    for (long v : A) {
        if (map.count(v)==0)
            map.insert(std::make_pair(v,1));
        else
            map.at(v)+=1;
    }
    for(auto iter = begin(map); iter != end(map); ++iter) {
        const auto& pair = *iter;
        if (pair.second!=0 && pair.second!=1)
            ans-= pair.second * (pair.second - 1) / 2;
    }
    cout << ans << endl;
}

// Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
